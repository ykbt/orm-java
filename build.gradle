buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.11.7'
        classpath "nu.studer:gradle-jooq-plugin:3.0.2"
    }
}



plugins {
    id 'java'
    id "org.springframework.boot" version '2.0.4.RELEASE'
    id 'idea'
    id 'checkstyle'
    id 'net.ltgt.apt' version '0.10'
    id 'nu.studer.jooq' version '3.0.2'
}

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

idea.module.outputDir file("out/production/classes")

jar {
    baseName = 'ykbt-orm-java'
    version '1.0-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// JavaクラスとSQLファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.4.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
    compile 'org.springframework.boot:spring-boot-starter-jooq:2.1.0.RELEASE'
    compile 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.1'

    compile 'org.yaml:snakeyaml:1.23'

    compile 'mysql:mysql-connector-java:8.0.12'

    compileOnly 'org.projectlombok:lombok:1.18.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    jooqRuntime 'mysql:mysql-connector-java:8.0.12'

    apt 'org.projectlombok:lombok:1.18.2'
}

checkstyle {
    toolVersion = "7.3"
    configFile project.file('checkstyle.xml')
    showViolations = true
    checkstyleMain {
        checkstyleClasspath += sourceSets.main.runtimeClasspath
    }
}

// gradleに環境設定書く必要があるのやだなあ
// gradle使わない方法もあるみたいだけどめんどくさそう
jooq {
    user(sourceSets.main) {
        jdbc {
            driver = "com.mysql.cj.jdbc.Driver"
            url = 'jdbc:mysql://localhost:3306/ormdb'
            user = 'root'
            password = 'password'
            schema = 'ormdb'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                includes = '.*'
                excludes = ''
            }
            target {
                packageName = 'com.ykbt.jooq'
                directory = 'src/main/java'
            }
        }
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
